{"version":3,"sources":["List/index.tsx","Swiper/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ScrollList","props","startIndex","endIndex","scrollRef","React","createRef","scrollTop","firstItem","index","top","bottom","itemCache","viewableCount","calledEndReached","scrollRect","memorizeItem","elem","rect","getBoundingClientRect","push","height","onScroll","current","calcIndex","updateItems","viewport","renderItems","data","renderItem","keyExtractor","map","item","key","ref","node","deleteRow","cacheIndex","findCacheRow","splice","start","end","length","mid","Math","floor","state","startOffset","endOffset","viewableItems","this","estimateRowHeight","ceil","prevProps","estimateIndex","findFirst","threshold","onEndReachedThreshold","abs","onEndReached","onViewableItemsChanged","items","slice","setState","className","style","paddingTop","paddingBottom","Component","Swiper","startX","startY","currentX","moveX","moveY","onTouchStart","event","touches","pageX","pageY","onTouchMove","stopPropagation","animated","onSelect","onTouchEnd","onDelete","selected","distance","innerStyle","width","transform","transition","children","onClick","App","useState","Array","fill","value","setData","currentIndex","setCurrentIndex","isInfinity","setIsInfinity","enabledDelete","setEnabledDelete","useRef","window","innerHeight","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0TAmCaA,G,MAAb,kDAmBE,WAAaC,GAAyB,IAAD,8BACnC,cAAMA,IAlBRC,WAAa,EAiBwB,EAfrCC,SAAW,EAe0B,EAbrCC,UAAYC,IAAMC,YAamB,EAZrCC,UAAY,EAYyB,EAVrCC,UAAY,CACVC,MAAO,EACPC,IAAK,EACLC,OAAQ,GAO2B,EALrCC,UAAoB,GAKiB,EAJrCC,cAAgB,EAIqB,EAHrCC,kBAAmB,EAGkB,EAFrCC,WAAa,CAAEL,IAAK,GAEiB,EA0BrCM,aAAe,SAACC,EAAsBR,GACpC,IAAMS,EAAOD,EAAKE,wBACZT,EAAMQ,EAAKR,IAAM,EAAKH,WAAa,EAAKQ,WAAWL,KAAO,GAEhE,EAAKE,UAAUQ,KAAK,CAClBX,QACAC,MACAC,OAAQD,EAAMQ,EAAKG,UAjCc,EAqCrCC,SAAW,WAAO,IAAD,IACf,GAAK,EAAKlB,UAAUmB,QAApB,CAIA,IAAMhB,EAAY,EAAKH,UAAUmB,QAAQhB,WAErCA,EAAY,EAAKA,WAAeA,EAAY,EAAKC,UAAUG,QAC3DJ,EAAY,EAAKA,WAAeA,EAAY,EAAKC,UAAUE,OAE7D,EAAKc,UAAUjB,GACf,EAAKkB,eAGHlB,EAAY,EAAKA,WAAa,EAAKA,UAAYA,GAxE3B,KAyEtB,EAAKO,kBAAmB,GAG1B,EAAKP,UAAYA,EACjB,eAAKN,OAAMqB,gBAAX,gBAAsB,CAAEf,YAAWmB,SAAU,EAAKzB,MAAMoB,WAxDrB,EA2DrCM,YAAc,SAACC,GAAiB,IAAD,EACQ,EAAK3B,MAAlC4B,EADqB,EACrBA,WAAYC,EADS,EACTA,aAapB,OAZcF,EAAKG,KAAI,SAACC,EAAMvB,GAC5B,IAAMwB,EAAMH,EAAeA,EAAaE,EAAMvB,GAASuB,EAAKC,IAAMD,EAAKC,IAAMxB,EAC7E,OACE,qBAAeyB,IAAK,SAACC,GACfA,GACF,EAAKnB,aAAamB,EAAM,EAAKjC,WAAaO,IAF9C,SAKIoB,EAAW,CAACG,OAAMvB,MAAO,EAAKP,WAAaO,KALrCwB,OAhEqB,EA4ErCG,UAAY,SAAC3B,GACX,IAAM4B,EAAa,EAAKC,aAAa7B,IACjB,IAAhB4B,GACF,EAAKzB,UAAU2B,OAAOF,EAAY,IA/ED,EAmFrCC,aAAe,SAAC7B,GAGd,IAFA,IAAI+B,EAAQ,EACRC,EAAM,EAAK7B,UAAU8B,OACnBF,GAASC,GAAK,CAClB,IAAME,EAAMC,KAAKC,OAAOL,EAAQC,GAAO,GACvC,GAAI,EAAK7B,UAAU+B,GAAKlC,QAAUA,EAChC,OAAOkC,EACE,EAAK/B,UAAU+B,GAAKlC,MAAQA,EACrCgC,IAEAD,IAGJ,OAAQ,GA9FR,EAAKM,MAAQ,CACXC,YAAa,EACbC,UAAW,EACXC,cAAe,IALkB,EAnBvC,gEA4BuB,IAAD,EACoBC,KAAKjD,MAAnCoB,EADU,EACVA,OAAQ8B,EADE,EACFA,kBAChBD,KAAKrC,cAAgB+B,KAAKQ,KAAK/B,EAAS8B,GAjCvB,EAkCjBD,KAAK/C,SAAW+C,KAAKhD,WAAagD,KAAKrC,cACnCqC,KAAK9C,UAAUmB,UACjB2B,KAAKnC,WAAamC,KAAK9C,UAAUmB,QAAQJ,yBAE3C+B,KAAKzB,gBAnCT,yCAsCqB4B,GACbA,EAAUzB,KAAKc,SAAWQ,KAAKjD,MAAM2B,KAAKc,SAC5CQ,KAAKpC,kBAAmB,EACxBoC,KAAKzB,iBAzCX,gCAsHYlB,GAAoB,IACpB4C,EAAuBD,KAAKjD,MAA5BkD,kBAGJG,EAAgBV,KAAKC,MAAMtC,EAAY4C,GACrCzC,EAAMwC,KAAKtC,UAAU0C,GAE3B,IAAK5C,EACH,OAAO,KAGT,GAAIA,EAAIC,SAAWJ,EACjB,OAAOG,EAIT,GAAIA,EAAIC,OAASJ,EACf,KAAO+C,GAAiB,GAAKJ,KAAKtC,UAAU0C,GAAe3C,QAAUJ,GACnE+C,SAGF,KAAMA,EAAgBJ,KAAKtC,UAAU8B,OAAS,GAAKQ,KAAKtC,UAAU0C,GAAe3C,OAASJ,GACxF+C,IAGJ,OAAOJ,KAAKtC,UAAU0C,IAAkB,OA/I5C,gCAkJY/C,GACR,IAAMyB,EAAOkB,KAAKK,UAAUhD,GAG5B,GAFAA,EAAYA,GAAa,EAEpByB,EAAL,CAIAkB,KAAK1C,UAAL,eACKwB,GAELkB,KAAKhD,WAAagD,KAAK1C,UAAUC,MACjCyC,KAAK/C,SAAW+C,KAAKhD,WAAagD,KAAKrC,cAEvC,IAE4D,IAFtD2C,EAAYN,KAAKjD,MAAMwD,uBAnKZ,EAoKjB,GAAIb,KAAKc,IAAIR,KAAK/C,SAAW+C,KAAKjD,MAAM2B,KAAKc,SAAYc,EACvD,IAAKN,KAAKpC,kBAAoBP,EAAY2C,KAAK3C,UAC7C,aAAA2C,KAAKjD,OAAM0D,oBAAX,iBACAT,KAAKpC,kBAAmB,KApKhC,oCAyKiB,IAAD,EACgDoC,KAAKjD,MAAzD2B,EADI,EACJA,KAAMuB,EADF,EACEA,kBAAmBS,EADrB,EACqBA,uBAC3BC,EAAQjC,EAAKkC,MAAMZ,KAAKhD,WAAYgD,KAAK/C,UACzB,OAAtByD,QAAsB,IAAtBA,KAAyB,CAAEX,cAAeY,EAAOrB,MAAOU,KAAKhD,WAAYuC,IAAKS,KAAK/C,WACnF+C,KAAKa,SAAS,CACZhB,YAAaG,KAAK1C,UAAUE,IAC5BsC,WAAYpB,EAAKc,OAASQ,KAAK/C,UAAYgD,EAC3CF,cAAeY,MAhLrB,+BAoLa,IACDxC,EAAW6B,KAAKjD,MAAhBoB,OADA,EAE0C6B,KAAKJ,MAA/CC,EAFA,EAEAA,YAAaC,EAFb,EAEaA,UAAWC,EAFxB,EAEwBA,cAChC,OACE,qBACEe,UAAU,wBACV9B,IAAKgB,KAAK9C,UACVkB,SAAU4B,KAAK5B,SACf2C,MAAO,CAAE5C,UAJX,SAME,qBAAK4C,MAAO,CAAEC,WAAW,GAAD,OAAKnB,EAAL,MAAsBoB,cAAc,GAAD,OAAKnB,EAAL,OAA3D,SACIE,KAAKvB,YAAYsB,WA/L7B,GAAgC5C,IAAM+D,YCpBjBC,G,wDAOnB,WAAYpE,GAAqB,IAAD,8BAC9B,cAAMA,IAPRqE,OAAS,EAMuB,EALhCC,OAAS,EAKuB,EAJhCC,SAAW,EAIqB,EAHhCC,MAAQ,EAGwB,EAFhCC,MAAQ,EAEwB,EAOhCC,aAAe,SAACC,GACd,EAAKN,OAASM,EAAMC,QAAQ,GAAGC,MAC/B,EAAKP,OAASK,EAAMC,QAAQ,GAAGE,OATD,EAYhCC,YAAc,SAACJ,GAA6C,IAAD,IACzDA,EAAMK,kBACN,EAAKT,SAAWI,EAAMC,QAAQ,GAAGC,MACjC,EAAKL,MAAQ,EAAKD,SAAW,EAAKF,OAClC,EAAKI,MAAQE,EAAMC,QAAQ,GAAGE,MAAQ,EAAKR,OAEvC3B,KAAKc,IAAI,EAAKgB,OAAS9B,KAAKc,IAAI,EAAKe,QAIrC7B,KAAKc,IAAI,EAAKe,OAAS,KAGzB,EAAKV,SAAS,CACZmB,UAAU,IAId,eAAKjF,OAAMkF,gBAAX,mBA9B8B,EAiChCC,WAAa,SAACR,GACZ,EAAKb,SAAS,CACZmB,UAAU,KAnCkB,EAuChCG,SAAW,WAAO,IAAD,IACf,EAAKtB,SAAS,CACZmB,UAAU,IAEZ,eAAKjF,OAAMoF,gBAAX,kBAzCA,EAAKvC,MAAQ,CACXoC,UAAU,GAHkB,E,qDA8CtB,IAAD,EACyBhC,KAAKjD,MAA7BqF,EADD,EACCA,SAAU9B,EADX,EACWA,UACV0B,EAAahC,KAAKJ,MAAlBoC,SACFK,EAAWrC,KAAKuB,OAAS,EAAI,GAAKjB,EAClCgC,EAIF,CACFC,MAAM,eAAD,OAAiBjC,EAAjB,QAOP,OAJI0B,GAAYI,IACdE,EAAWE,UAAX,qBAAqCH,EAArC,OACAC,EAAWG,WAAa,uBAGxB,qBAAK3B,UAAU,mBAAf,SACE,sBAAKA,UAAU,QAAQC,MAAOuB,EAA9B,UACE,qBAAKxB,UAAU,OACbW,aAAczB,KAAKyB,aACnBK,YAAa9B,KAAK8B,YAClBI,WAAYlC,KAAKkC,WAHnB,SAKGlC,KAAKjD,MAAM2F,WAEd,qBAAK5B,UAAU,QAAQ6B,QAAS3C,KAAKmC,SAAUpB,MAAO,CAACwB,MAAOjC,GAA9D,mC,GA/E0BnD,IAAM+D,YCsD3B0B,MAhEf,WAAgB,IAAD,EACWC,mBAAS,IAAIC,MAAM,KAAKC,KAAK,GAAGlE,KAAI,SAACmE,EAAOzF,GAAR,MAAmB,CAAEA,aADpE,mBACNmB,EADM,KACAuE,EADA,OAE2BJ,oBAAU,GAFrC,mBAENK,EAFM,KAEQC,EAFR,OAGuBN,oBAAS,GAHhC,mBAGNO,EAHM,KAGMC,EAHN,OAI6BR,oBAAS,GAJtC,mBAINS,EAJM,KAISC,EAJT,KAKPvE,EAAMwE,iBAAmB,MAuC/B,OACE,qBAAK1C,UAAU,MAAf,SACE,yBAAQA,UAAU,aAAlB,UACE,sBAAKA,UAAU,UAAf,UACE,qBAAKA,UAAWsC,EAAa,WAAa,GAAIT,QAAS,WAAQU,GAAeD,IAA9E,sCACA,qBAAKtC,UAAWwC,EAAgB,WAAY,GAAIX,QAAS,WAAQY,GAAkBD,IAAnF,yCAEF,cAAC,EAAD,CACEtE,IAAKA,EACLL,WA9C0C,SAAC,GAAqB,IAAnBG,EAAkB,EAAlBA,KAAMvB,EAAY,EAAZA,MACzD,OAAK+F,EAQH,cAAC,EAAD,CACElB,SAAUc,IAAiB3F,EAC3B+C,UAAW,GACX2B,SAAU,kBAAMkB,EAAgB5F,IAChC4E,SAAU,WACR,IAAMxB,EAAK,YAAOjC,GAClBiC,EAAMtB,OAAO9B,EAAO,GAChByB,EAAIX,SACNW,EAAIX,QAAQa,UAAU3B,GAExB4F,GAAiB,GACjBF,EAAQtC,IAXZ,SAcE,qBAAKG,UAAU,OAAf,SACG,IAAMvD,EAAQ,IAAMuB,EAAKvB,UArB5B,qBAAKuD,UAAU,OAAf,SACG,IAAMvD,EAAQ,IAAMuB,EAAKvB,SA2C1BmB,KAAMA,EACNP,OAAQsF,OAAOC,YAAc,GAC7BjD,aAnBa,WACf2C,GACFH,EAAQ,GAAD,mBAAKvE,GAAL,YAAc,IAAIoE,MAAM,KAAKC,KAAK,GAAGlE,KAAI,SAACmE,EAAOzF,GAAR,MAAmB,CAAEA,MAAOmB,EAAKc,OAASjC,SAE5FoG,QAAQC,IAAI,gBAgBN3D,kBAAmB,WChDd4D,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8123dccc.chunk.js","sourcesContent":["import React from 'react';\n\nimport './index.less'\n\nexport interface ScrollListProps {\n  data: any[];\n  // 渲染每列的内容\n  renderItem: (item: {item: any, index: number }) => any;\n  // 用于设置 unique key\n  keyExtractor?: (item: any, index: number) => string;\n  // 预估 row 的高度，用于动态渲染\n  estimateRowHeight: number;\n  // 可视区域高度\n  height: number;\n  onScroll?: (item: {viewport: number, scrollTop: number }) => void;\n  onViewableItemsChanged?: (info: {viewableItems: any[], start: number, end: number }) => void;\n  onEndReachedThreshold?: number;\n  onEndReached?: () => void;\n}\n\ninterface State {\n  startOffset: number;\n  endOffset: number;\n  viewableItems: any[];\n}\n\ninterface Item {\n  index: number;\n  top: number;\n  bottom: number;\n}\n\nconst bottomBuffer = 5;\nconst estimateEndDistance = 30;\n\nexport class ScrollList extends React.Component<ScrollListProps, State> {\n  // 可见区域的第一个元素\n  startIndex = 0;\n  // 可见区域最后一个元素\n  endIndex = 0;\n\n  scrollRef = React.createRef<HTMLDivElement>();\n  scrollTop = 0;\n\n  firstItem = {\n    index: 0,\n    top: 0,\n    bottom: 0\n  };\n  itemCache: Item[] = [];\n  viewableCount = 0;\n  calledEndReached = false;\n  scrollRect = { top: 0 };\n\n  constructor (props: ScrollListProps) {\n    super(props);\n    this.state = {\n      startOffset: 0,\n      endOffset: 0,\n      viewableItems: [],\n    }\n  }\n\n  componentDidMount() {\n    const { height, estimateRowHeight } = this.props;\n    this.viewableCount = Math.ceil(height / estimateRowHeight) + bottomBuffer;\n    this.endIndex = this.startIndex + this.viewableCount;\n    if (this.scrollRef.current) {\n      this.scrollRect = this.scrollRef.current.getBoundingClientRect();\n    }\n    this.updateItems();\n  }\n\n  componentDidUpdate(prevProps: ScrollListProps) {\n    if (prevProps.data.length !== this.props.data.length) {\n      this.calledEndReached = false;\n      this.updateItems();\n    }\n  }\n\n  memorizeItem = (elem: HTMLDivElement, index: number) => {\n    const rect = elem.getBoundingClientRect();\n    const top = rect.top + this.scrollTop - (this.scrollRect.top || 0);\n\n    this.itemCache.push({\n      index,\n      top,\n      bottom: top + rect.height,\n    });\n  }\n\n  onScroll = () => {\n    if (!this.scrollRef.current) {\n      return;\n    }\n\n    const scrollTop = this.scrollRef.current.scrollTop;\n    if (\n      ((scrollTop > this.scrollTop) && (scrollTop > this.firstItem.bottom)) ||\n      ((scrollTop < this.scrollTop) && (scrollTop < this.firstItem.top))\n    ) {\n      this.calcIndex(scrollTop);\n      this.updateItems();\n    }\n\n    if (scrollTop < this.scrollTop && this.scrollTop - scrollTop >= estimateEndDistance) {\n      this.calledEndReached = false;\n    }\n\n    this.scrollTop = scrollTop\n    this.props.onScroll?.({ scrollTop, viewport: this.props.height });\n  };\n\n  renderItems = (data: any[]) => {\n    const { renderItem, keyExtractor } = this.props;\n    const items = data.map((item, index) => {\n      const key = keyExtractor ? keyExtractor(item, index) : item.key ? item.key : index;\n      return (\n        <div key={key} ref={(node) => {\n          if (node) {\n            this.memorizeItem(node, this.startIndex + index );\n          }\n        }}>\n          { renderItem({item, index: this.startIndex + index }) }\n        </div>\n      )\n    });\n    return items;\n  }\n\n  deleteRow = (index: number) => {\n    const cacheIndex = this.findCacheRow(index);\n    if (cacheIndex !== -1) {\n      this.itemCache.splice(cacheIndex, 1);\n    }\n  };\n\n  findCacheRow = (index: number) => {\n    let start = 0;\n    let end = this.itemCache.length;\n    while(start <= end) {\n      const mid = Math.floor((start + end) / 2);\n      if (this.itemCache[mid].index === index) {\n        return mid;\n      } else if (this.itemCache[mid].index > index) {\n        end--;\n      } else {\n        start++;\n      }\n    }\n    return -1;\n  }\n\n  findFirst(scrollTop: number) {\n    const { estimateRowHeight }  = this.props;\n\n    // 使用预估高度计算一个预估的 index\n    let estimateIndex = Math.floor(scrollTop / estimateRowHeight);\n    const top = this.itemCache[estimateIndex];\n\n    if (!top) {\n      return null;\n    }\n\n    if (top.bottom === scrollTop) {\n      return top;\n    }\n\n    // 根据预估的高度找到最近的边界值\n    if (top.bottom > scrollTop) {\n      while (estimateIndex >= 1 && this.itemCache[estimateIndex].bottom >= scrollTop) {\n        estimateIndex--;\n      }\n    } else {\n      while(estimateIndex < this.itemCache.length - 1 && this.itemCache[estimateIndex].bottom < scrollTop) {\n        estimateIndex++;\n      }\n    }\n    return this.itemCache[estimateIndex] || null;\n  }\n\n  calcIndex(scrollTop: number) {\n    const item = this.findFirst(scrollTop);\n    scrollTop = scrollTop || 0;\n\n    if (!item) {\n      return;\n    }\n\n    this.firstItem = {\n      ...item,\n    }\n    this.startIndex = this.firstItem.index;\n    this.endIndex = this.startIndex + this.viewableCount;\n\n    const threshold = this.props.onEndReachedThreshold || bottomBuffer;\n    if (Math.abs(this.endIndex - this.props.data.length) <=  threshold) {\n      if (!this.calledEndReached && scrollTop > this.scrollTop) {\n        this.props.onEndReached?.();\n        this.calledEndReached = true;\n      }\n    }\n  }\n\n  updateItems() {\n    const { data, estimateRowHeight, onViewableItemsChanged } = this.props;\n    const items = data.slice(this.startIndex, this.endIndex);\n    onViewableItemsChanged?.({ viewableItems: items, start: this.startIndex, end: this.endIndex });\n    this.setState({\n      startOffset: this.firstItem.top,\n      endOffset: (data.length - this.endIndex) * estimateRowHeight,\n      viewableItems: items,\n    });\n  }\n\n  render () {\n    const { height } = this.props;\n    const { startOffset, endOffset, viewableItems } = this.state\n    return (\n      <div\n        className='scroll-list-container'\n        ref={this.scrollRef}\n        onScroll={this.onScroll}\n        style={{ height }}\n      >\n        <div style={{ paddingTop: `${startOffset}px`, paddingBottom: `${endOffset}px` }}>\n          { this.renderItems(viewableItems) }\n        </div>\n      </div>\n    )\n  }\n}\n\n\n","import React from 'react';\n\nimport './index.less';\n\nexport interface SwiperProps {\n  selected: boolean;\n  onSelect?: () => void;\n  onDelete?: () => void;\n  threshold: number;\n};\n\ninterface State {\n  animated: boolean;\n}\n\nexport default class Swiper extends React.Component<SwiperProps, State> {\n  startX = 0;\n  startY = 0;\n  currentX = 0;\n  moveX = 0;\n  moveY = 0;\n\n  constructor(props: SwiperProps) {\n    super(props);\n    this.state = {\n      animated: false,\n    }\n  }\n\n  onTouchStart = (event: React.TouchEvent<HTMLDivElement>) => {\n    this.startX = event.touches[0].pageX;\n    this.startY = event.touches[0].pageY;\n  }\n\n  onTouchMove = (event: React.TouchEvent<HTMLDivElement>) => {\n    event.stopPropagation();\n    this.currentX = event.touches[0].pageX\n    this.moveX = this.currentX - this.startX\n    this.moveY = event.touches[0].pageY - this.startY\n\n    if (Math.abs(this.moveY) > Math.abs(this.moveX)) {\n      return\n    }\n\n    if (Math.abs(this.moveX) < 10 ) {\n      return\n    } else {\n      this.setState({\n        animated: true,\n      })\n    }\n\n    this.props.onSelect?.();\n  }\n\n  onTouchEnd = (event: React.TouchEvent<HTMLDivElement>) => {\n    this.setState({\n      animated: true\n    })\n  }\n\n  onDelete = () => {\n    this.setState({\n      animated: false,\n    });\n    this.props.onDelete?.();\n  }\n\n  render() {\n    const { selected, threshold } = this.props;\n    const { animated } = this.state;\n    const distance = this.moveX >= 0 ? 0 : -threshold;\n    const innerStyle: {\n      transform?: string;\n      transition?: string;\n      width?: string;\n    } = {\n      width: `calc(100% + ${threshold}px)`\n    };\n\n    if (animated && selected) {\n      innerStyle.transform = `translateX(${distance}px)`;\n      innerStyle.transition = 'transform 0.3s ease';\n    }\n    return (\n      <div className=\"swiper-container\">\n        <div className=\"inner\" style={innerStyle}>\n          <div className=\"left\"\n            onTouchStart={this.onTouchStart}\n            onTouchMove={this.onTouchMove}\n            onTouchEnd={this.onTouchEnd}\n          >\n            {this.props.children}\n          </div>\n          <div className=\"right\" onClick={this.onDelete} style={{width: threshold}}>\n            删除\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { useRef, useState } from 'react';\nimport './App.css';\nimport { ScrollList, ScrollListProps } from './List';\nimport Swiper from './Swiper';\n\nfunction App() {\n  const [data, setData] = useState(new Array(100).fill(0).map((value, index) => ({ index })));\n  const [currentIndex, setCurrentIndex] = useState(-1);\n  const [isInfinity, setIsInfinity] = useState(true);\n  const [enabledDelete, setEnabledDelete] = useState(false);\n  const ref = useRef<ScrollList>(null);\n\n  const renderItem: ScrollListProps['renderItem'] = ({ item, index }) => {\n    if (!enabledDelete) {\n      return (\n        <div className=\"item\">\n          {'#' + index + '-' + item.index }\n        </div>\n      );\n    }\n    return (\n      <Swiper\n        selected={currentIndex === index}\n        threshold={60}\n        onSelect={() => setCurrentIndex(index)}\n        onDelete={() => {\n          const items = [...data];\n          items.splice(index, 1);\n          if (ref.current) {\n            ref.current.deleteRow(index);\n          }\n          setCurrentIndex(-1);\n          setData(items);\n        }}\n      >\n        <div className=\"item\">\n          {'#' + index + '-' + item.index }\n        </div>\n      </Swiper>\n    )\n  };\n\n  const onEndReached = () => {\n    if (isInfinity) {\n      setData([...data, ...new Array(100).fill(0).map((value, index) => ({ index: data.length + index }))])\n    }\n    console.log('end reached');\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"setting\">\n          <div className={isInfinity ? 'selected' : ''} onClick={() => { setIsInfinity(!isInfinity);}}>无限滚动</div>\n          <div className={enabledDelete ? 'selected': ''} onClick={() => { setEnabledDelete(!enabledDelete)}}>左滑删除</div>\n        </div>\n        <ScrollList\n          ref={ref}\n          renderItem={renderItem}\n          data={data}\n          height={window.innerHeight - 50}\n          onEndReached={onEndReached}\n          estimateRowHeight={50}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}